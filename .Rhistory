coord_cartesian(ylim = c(0, 250))
by(pf$friend_count, pf$gender, summary)
by(pf$friendships_initiated, pf$gender, summary)
qplot(x = gender, y =  friendships_initiated,
geom = "boxplot", data = subset(pf, !is.na(gender)))+
coord_cartesian(ylim = c(0, 250))
pf$mobile_check_in <- NA
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
pf$mobile_check_in <- NA
length(pf$mobile_check_in)
length(pf)
length(pf$userid)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0, 1, 0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
count(pf$mobile_check_in)
summary(pf$mobile_check_in)
data(diamonds)
library(ggplot2)
qplot(x=diamonds$price, data=diamonds)
qplot(x=diamonds$price, data=diamonds  color = I("white"), fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)
summary(diamonds)
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 100))
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200))
qplot(x=diamonds$price, data=diamonds  ,binwidth= 3,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200))
qplot(x=diamonds$price, data=diamonds  ,binwidth= 40,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200))
qplot(x=diamonds$price, data=diamonds  ,binwidth= 0.25,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200))
length(diamonds$price < 500)
length(diamonds$price)
sum(diamonds$price < 500)
sum(diamonds$price < 250)
sum(diamonds$price > 15000)
sum(diamonds$price >= 15000)
qplot(x=diamonds$price, data=diamonds  ,binwidth= 0.25,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200), limits=c(0,4000))
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Age of users",
ylab = "Number of users",)+
scale_x_continuous( breaks = seq(100, 4000, 200), limits=c(0,4000))
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 4000, 200), limits=c(0,4000))
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 3000, 200), limits=c(0,3000))
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 1000, 100), limits=c(0,1000))
library("gridExtra")
qplot(x=diamonds$price, data=diamonds  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 1000, 100), limits=c(0,1000))
qplot(x=diamonds$price, data=subset(diamonds, !is.na(cut))  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 1000, 100), limits=c(0,1000))
qplot(x=diamonds$price, data=subset(diamonds, !is.na(cut))  ,
color = I("white"),
fill = I('#099DD9'),
xlab = "Number of diamonds",
ylab = "price of diamons",)+
scale_x_continuous( breaks = seq(100, 1000, 100), limits=c(0,1000))
?by
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, qplot)
qplot(y=price, x=cut,  data=diamonds, geom="boxplot",xlab = 'Diamond    Cut', fill=cut)+
coord_cartesian(ylim=c(0,8000))
qplot(y=price, x=cut,  data=diamonds,xlab = 'Diamond    Cut', fill=cut)+
coord_cartesian(ylim=c(0,8000))
p5 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "Ideal"], data=diamonds)
p1 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "Fair"], data=diamonds)
p2 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "Good"], data=diamonds)
p3 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "VeryGood"], data=diamonds)
p4 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "Premium"], data=diamonds)
p5 <- qplot(x=diamonds$price, y = diamonds[diamonds$cut == "Ideal"], data=diamonds)
grid.arrange(p1, p2, p3, p4, p5)
qplot(x = price, data = diamonds) + facet_wrap(~cut)
p1 <- qplot(x = friend_count, data = pf)
p2 <- qplot(x = friend_count, data = pf) + scale_x_log10()
p3 <- qplot(x = friend_count, data = pf) + scale_x_sqrt()
max(diamonds$price)
max(diamonds)
diamonds[diamonds$price == max(diamonds)]
by(diamonds, cut, summary)
by(diamonds, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, summary)
by(diamonds$price, diamonds$cut, max)
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = "free")
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat))) + facet_wrap(~cut, scales = "free")
+ scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat))) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=10) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=30) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=3) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=0.25) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=0.5) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)), binwidth=0.1) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot", binwidth=0.1) +
facet_wrap(~cut, scales = "free") +
scale_x_log10()
qplot(x = price, y = clarity data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot", binwidth=0.1)
qplot(x = price, y = clarity, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot", binwidth=0.1)
qplot(x = price, y = clarity, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(y = price, x = clarity, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(y = price, x = carat, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(y = price, x = color, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
aux <- diamonds[diamonds$color == "D"]
by(aux$price, aux$cut, max)
aux
aux <- subset(diamonds, color =="D")
by(aux$price, aux$cut, max)
by(aux$price, aux$cut, summary)
summary(aux)
aux <- subset(diamonds, color =="J")
summary(aux)
IQR(subset(diamonds, color == "D")$price)
IQR(subset(diamonds, color == "J")$price)
?diamonds
qplot(y = price, x = carat, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(y = carat, x = price, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(y = price, x = carat, data = subset(diamonds, !is.na(diamonds$carat)),
geom = "boxplot")
qplot(x = carat, data = diamonds,
geom = 'freqpoly', color = gender) +
scale_x_continuous()
qplot(x = carat, data = diamonds,
geom = 'freqpoly', color = color) +
scale_x_continuous()
qplot(x = carat, data = diamonds,
geom = 'freqpoly', color = cut) +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 1,
geom = 'freqpoly', color = cut) +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 1,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 1,
geom = 'freqpoly', color = carat) +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 30,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.5,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.1,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.15,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.25,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.05,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.1,
geom = 'freqpoly') +
scale_x_continuous()
qplot(x = carat, data = diamonds, binwidth = 0.1,
geom = 'freqpoly') +
scale_x_continuous(limits = c(0, 3), breaks = seq(0, 10, 0.1)) +
scale_y_continuous(breaks = seq(0,12000,1000))
install.packages("openxlsx")
install.packages("openxlsx", dependencies = TRUE)
install.packages("xlsx", dependencies = TRUE)
require(xlxs)
require(xlsx)
read.xlsx("marriage.xlsx")
rm(list = ls())
getwd()
setwd("~/Udacity Data Analisys/Lesson 4")
qplot(x = age, y = friend_count, data = pf)
library(ggplot2)
pf <- read.csv("pseudo_facebook.tsv", sep = "\t")
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) + geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(x = "", y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
coord_trans(x = "sqrt", y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
coord_trans(x = "sqrt", y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
coord_trans( y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20) +
coord_trans( y = "sqrt") +
xlim(13, 90)
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/60) +
coord_trans( y = "sqrt") +
xlim(13, 90)
install.packages("dplyr")
library(dplyr)
pf$fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_meadian = median(friend_count),
n = n())
age_groups <- group_by(pf, age)
pf$fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_meadian = median(friend_count),
n = n())
pf$fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_meadian = median(friend_count),
n = n())
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_meadian = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
pf.fc_by_age <- pf %<%
group_by(age) %<%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = meadian(friend_count),
n = n()) %<%
arrange(age)
pf.fc_by_age <- pf %.%
group_by(age) %.%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = meadian(friend_count),
n = n()) %.%
arrange(age)
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = meadian(friend_count),
n = n()) %>%
arrange(age)
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(x = age, y = n), data = pf.fc_by_age) + geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) + geom_line()
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = summary, fun.y = mean)
ggplot(aes(x = age, y = friend_count_mean), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = summary, fun.y = mean)
ggplot(aes(x = age, y = friend_count_mean), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = median)
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1,
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .9,
linetype = 2, color = 'blue') +
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1,
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .9,
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, probs = .1,
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .5,
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, probs = .9,
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(30, 90)+
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
coord_cartesian(c(13,90)) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile,
fun.args = list(probs = .1),
linetype = 2, color = 'blue')
cor(x = pf, use = all.obs, method = pearson)
cor(x = pf, use = "all.obs", method = pearson)
cor(x = pf, use = "all.obs", method = "pearson")
cor(pf, use = "all.obs", method = "pearson")
cor(x = pf$age, y = pf$friend_count, use = "all.obs", method = "pearson")
with(       subset(pf, age < 70)        , cor.test(age, friend_count))
ggplot(pf, aes(x=www_likes_recieved, y=likes_recieved)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_recieved, y=likes_received)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_recieved, y=likes_received)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
coord_cartesian(c(0,10000)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
coord_cartesian(xlim = c(0,10000), ylim = c(0,10000)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
coord_cartesian(xlim = c(0,1000), ylim = c(0,1000)) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
coord_cartesian(xlim = c(0,quantile(pf$www_likes_received, 0.95)),
ylim = c(0,quantile(pf$likes_received, 0.95))) +
geom_point(shape=1)
ggplot(pf, aes(x=www_likes_received, y=likes_received)) +
coord_cartesian(xlim = c(0,quantile(pf$www_likes_received, 0.95)),
ylim = c(0,quantile(pf$likes_received, 0.95))) +
geom_point(shape=1) +
geom_smooth(method = 'lm', color = 'red')
with(pf, cor(www_likes_recieved, likes_recieved))
with(pf, cor(www_likes_received, likes_received))
installed.packages('alr3')
install.packages('alr3')
library(alr3)
data(Mitchell)
?Mitchell
temp <- data(Mitchell)
temp <- Mitchell
rm(temp)
ggplot(Mitchell, aes(x=Temp, y=Month)) +
geom_point(shape=1)
ggplot(Mitchell, aes(y=Temp, x=Month)) +
geom_point(shape=1)
with(Mitchell, cor(Month, Temp))
ggplot(Mitchell, aes(y=Temp, x=Month)) +
geom_point(shape=1) +
scale_x_continuous(breaks = 12:)
ggplot(Mitchell, aes(y=Temp, x=Month)) +
geom_point(shape=1) +
scale_x_continuous(breaks = 12:max(Mitchell$Month))
ggplot(Mitchell, aes(y=Temp, x=Month)) +
geom_point(shape=1) +
scale_x_continuous(breaks = 1:12)
ggplot(Mitchell, aes(y=Temp, x=Month)) +
geom_point(shape=1) +
scale_x_continuous(breaks = seq(0, 203, 12))
pf$age_with_months <- pf$age + pf$dob_month * 0.1
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age_with_months)
head(pf.fc_by_age_months)
